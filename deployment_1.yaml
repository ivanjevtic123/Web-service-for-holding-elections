version: '2.1'

services:
  authenticationDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - net_authorization

  authenticationManage:
    image: manageimage
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      authenticationDB:
        condition: service_healthy
    networks:
      - net_authorization

  authentication:
    image: authenticationimage
    environment:
      - DATABASE_URL=authenticationDB
    depends_on:
      - authenticationManage
    ports:
      - 5002:5002
    networks:
      - net_authorization

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - net_authorization
      - net_elections

  redis:
    image: redis
    networks:
      - net_redis

  electionsDB:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    volumes:
      - dbdata_elections:/var/lib/mysql
    networks:
      - net_elections

  electionsMigration:
    image: electionsmigrationimage
    environment:
      - REDIS=redis
      - DATABASE_URL=electionsDB
    depends_on:
      electionsDB:
        condition: service_healthy
    networks:
      - net_elections

  admin:
    image: adminimage
    environment:
      - REDIS=redis
      - DATABASE_URL=electionsDB
    depends_on:
      - electionsMigration
    ports:
      - 6002:6002
    networks:
      - net_elections

  zvanicnik:
    image: zvanicnikimage
    ports:
      - 6004:6004
    environment:
      - REDIS=redis
      - DATABASE_URL=electionsDB
    networks:
      - net_redis
      - net_elections

  daemon:
    image: daemonimage
    networks:
      - net_redis
      - net_elections
    environment:
      - REDIS=redis
      - DATABASE_URL=electionsDB
    depends_on:
      electionsDB:
        condition: service_healthy

volumes:
  dbdata:
  dbdata_elections:

networks:
  net_authorization:
  net_redis:
  net_elections: